<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbxBanner.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAARMAAAAeCAYAAAAPQPrSAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAu
        IwAALiMBeKU/dgAABLhJREFUeF7tnb9rFUEQxxPwFxGjJsSYaBpL/QMsrG20ELFSMIViJWKhRQQRkTSK
        aBFUUoWAiiIpAoqFoGClYGOlhY2gjX+DEO+7es/Nvp3duZ232cvLLHya2/3ezO7sTe7t3l0GGpSTFQ8q
        PlT8qvhdsaIoSt+B6xvXOa53XPc9KTsqZitwcp9RRVH6H1z/yAPIB0nlXIUmEUVRapAPkBcaFdze+E6m
        KIqC/MAqTyt8J1AURalBnggWvSNRFIULeYeC30I+QRebThxZGbo2TbL14imvztSdP+6t4yCxGyOHFqT6
        bIM2rm7w4AFvW+C29ZHa35BdKSXmlWsjBPzznQO0KUY2rs++NjYJ8e1aQ8EqLXuxdefc1ZWpn69I9n5c
        8OpQN/ZmzlvHQWI3Rg4tSPXZBm1c3ZbTR71tgdvWR2p/Q3allJhXro0Q8M93DtCmGNm4Pvva2CTEF3lj
        1S4Ptn18DbtA0EaWbhsnKXYvXDfthmamV2nhrCSZbD577L+NxRvmfOPv5zvHtt+64NWh3cSnxU47HyGf
        U7WSsQI4hjq0cXVjr++vjDy+2aUBOfsbsitBMlbwGcftY1w4Y1WD+efq2xgjG9fnTPFF/ugU9l0JJ3C4
        XUI7OGcf52i5IIPifKPPZr31Nrl9zqEFOIY6tHHrJr++EP2lTvU5ZFdCTp9DSLSgjTEKEdMmxhf5wxQ8
        4eZr4CVnR5rQ78lkPWolcOxStFlbKkYUErsRzJOyjXZwcneEiyaT9mklcOxStFlbKkYUErsRzM4OnsH3
        VXrJ3REumkzap5XAsUvRZm2pGFFI7EZAHuGvl4DcHeHSNJns+7ZkfgtSwC8MoruVJtWmBk6qLeGzBI5d
        Cqk2Nlajy3dJbakYlfA5glk3afT2L8cZConWpWky2f992SwuUex5+zBZix0l+DN4+FCXVjLZxt89Muel
        GL53mdSGfJ768dJMOFtjazNNtiAcuxRSrWRulIqRxOdM8UUe2RjJJKfPoYQg0XJpaheTTZPJX6RaLmsd
        IwqOVpJMNsTPnBKDL9VOfH5i+keBc6fYxfML9TncpywlPkvg2KUoqW1rjCg42sT4mp85ugAbgKPNlUzW
        m1YCxy5Fm7WlYkQhsRvBLMD2fGt425Uz5jZt+M6lVcclg+CiyaR9WgkcuznmVW5tqRhRSOxGMFvDPX9o
        LccguGgyKaPFBQ0Nfs9Try+kkLu/FLm1peJLEdMK4tv5vCN73aTUILhoMimjDS0MSsjdX4rc2lLxpYhp
        E+Nr1kvqwn7RDx3Di0BwiAJ73Gjne8lo8stzr8bFfbkJ1C9VAWzJ4XxYAKuPhV6qQr2vLgbHZ6q/0rFC
        vX3MJddEDfV31/xMT+9IaqRjlTqvpFoct4+5lIiRTdP+JsZ31Yt+a/YJAi7uAAKJXQyUry6Ga8NHKJPn
        9DnXRA2BO0K7fS+RjBWXpv216fU454qRTVNtQnyRN7o+NM3+OJKiKMo/yA9MN9rZURRlQ2N2cEJFPyit
        KEqM6Ael66J3KIqiUETvSNyC30LsRVlFUfoe5ANyjSRWsEqLbR9NKoqyccH1jzzQtWuTWvCEG25v8Aw+
        Tq7/uFxR+hNc37jOcb13nmwNl4GBPwfzodmz6wY0AAAAAElFTkSuQmCC
</value>
  </data>
</root>